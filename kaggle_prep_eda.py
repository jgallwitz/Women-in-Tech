# -*- coding: utf-8 -*-
"""Kaggle_Prep/EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RUAWheu7zqka2CYL7Uh5JEH1BdPZxLEP
"""

# import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# read in CSV file and view dataset
jobs_survey = pd.read_csv('/content/job_survey.csv')
jobs_survey.head()

# view values for Country field
print(jobs_survey['Country'].value_counts())

# view values for Gender field
jobs_survey['Gender'].value_counts()

# dropping all rows that are outside of the US
jobs_survey = jobs_survey.drop(jobs_survey[jobs_survey['Country'] != 'United States of America'].index)

# dropping all NonDev employees
jobs_survey = jobs_survey.drop(jobs_survey[jobs_survey['MainBranch'] != 'Dev'].index)

# drop all nonbinary respondents since I want to compare men and women
jobs_survey = jobs_survey.drop(jobs_survey[jobs_survey['Gender'] == 'NonBinary'].index)

# reindexing
jobs_survey = jobs_survey.reset_index(drop=True)

# view info
jobs_survey.info()

# drop specified columns
jobs_survey = jobs_survey.drop(columns = ['Unnamed: 0', 'Accessibility','HaveWorkedWith'])

# check to ensure no missing values
jobs_survey.isna().sum()

# create 2 dataframes - 1 for responses from men and 1 for women - will be used for following visualization

jobs_survey_men = jobs_survey[jobs_survey['Gender'] == 'Man']
jobs_survey_women = jobs_survey[jobs_survey['Gender'] == 'Woman']

# group by gender
employed = jobs_survey.groupby('Gender')['Employment'].mean().reset_index()

# manipulate Employment field so chart shows unemployment and employment
employed['Employment'] = employed['Employment'] * 100
employed['Status'] = 'Employed'
unemployed = employed.copy()
unemployed['Employment'] = 100 - unemployed['Employment']
unemployed['Status'] = 'Unemployed'

plot_data = pd.concat([employed, unemployed])

# create barplot of employment % by gender
plt.figure(figsize=(8, 6))
sns.barplot(x='Gender', y='Employment', hue='Status', data=plot_data)

plt.title('Employed Status by Gender')
plt.xlabel('Gender')
plt.ylabel('Percent Employed (%)')

# create pie charts to show education levels
plt.figure(figsize=(10, 6))

plt.subplot(1, 2, 1)
men_edlevel_counts = jobs_survey_men['EdLevel'].value_counts()
plt.pie(men_edlevel_counts, labels=men_edlevel_counts.index, autopct='%1.1f%%')
plt.title('Education Level - Men')

plt.subplot(1, 2, 2)
women_edlevel_counts = jobs_survey_women['EdLevel'].value_counts()
plt.pie(women_edlevel_counts, labels=women_edlevel_counts.index, autopct='%1.1f%%')
plt.title('Education Level - Women')

# create boxplots to show distribution of computer skills by gender
plt.figure(figsize=(8, 6))
sns.boxplot(y='Gender', x='ComputerSkills', data=jobs_survey)

plt.title('Distribution of Computer Skills by Gender')
plt.xlabel('Number of Computer Skills')
plt.ylabel('Gender')

# create scatterplot to show years of coding experience vs average salary
average_salary = jobs_survey.groupby(['YearsCodePro', 'Gender'])['PreviousSalary'].mean().reset_index()

plt.figure(figsize=(8, 6))
sns.scatterplot(x='YearsCodePro', y='PreviousSalary', hue='Gender', data=average_salary)

plt.title('Average Previous Salary vs. Years of Professional Coding Experience by Gender')
plt.xlabel('Years of Professional Coding Experience')
plt.ylabel('Average Previous Salary')

plt.show()