# -*- coding: utf-8 -*-
"""WIT_ARM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AR5G8dq_7p6I20_Bv3pLT1qUFfXVEl1p
"""

# read and display dataset
jobs_survey <- read.csv("job_survey.csv")
head(jobs_survey)

# filter data as necessary
library(dplyr)

jobs_survey <- jobs_survey %>%
  filter(Country == "United States of America")

jobs_survey <- jobs_survey %>%
  filter(Gender != "NonBinary")

# drop columns that will not be used for analysis
jobs_survey <- jobs_survey %>%
  select(-c(X, Accessibility, Employment, MentalHealth, YearsCode, YearsCodePro, PreviousSalary, ComputerSkills, Employed, Country))

# remove row names
rownames(jobs_survey) <- NULL
# diplay data
head(jobs_survey)

# import libraries
library(tidyr)
library(stringr)

# split values that are separated by ;
jobs_survey <- jobs_survey %>%
  mutate(HaveWorkedWith = str_split(HaveWorkedWith, ";"))

# manipulate record data into transaction data so ARM can be used
basket_data <- jobs_survey %>%
  rowwise() %>%
  mutate(Transaction = paste(c(Age, EdLevel, Gender, MainBranch, unlist(HaveWorkedWith)), collapse = ",")) %>%
  select(Transaction)

print(basket_data)

# install necessary packages
install.packages("arules")
install.packages("arulesViz")
library(arules)
library(arulesViz)

# split data to list of strings and store as separate items
transactions_list <- strsplit(basket_data$Transaction, ",")

# convert to transaction data for ARM
basket_transactions <- as(transactions_list, "transactions")

# set rules and perform Apriori
rules <- apriori(basket_transactions, parameter = list(supp = 0.3, conf = 0.75, minlen = 2))

# print top 15 rules for support
top_support_rules <- sort(rules, by = "support", decreasing = TRUE)[1:15]
options(width = 200)
inspect(top_support_rules)

# print top 15 rules for confidence
top_confidence_rules <- sort(rules, by = "confidence", decreasing = TRUE)[1:15]
inspect(top_confidence_rules)

# print top 15 rules for lift
top_lift_rules <- sort(rules, by = "lift", decreasing = TRUE)[1:15]
options(width = 200)
inspect(top_lift_rules)

# visualize network for support
plot(top_support_rules, method = "graph", control = list(type = "items"))

# download basket data as CSV
library(readr)

write_csv(basket_data, "basket_data.csv")